# This is the Cloud Build configuration file for our full CI/CD pipeline.
# It defines the steps to lint, test, build, push, and deploy our application.

steps:
  # Step 1: Install Python dependencies
  - name: 'python:3.11-slim'
    id: 'Install Dependencies'
    dir: 'backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        python -m venv /workspace/venv
        . /workspace/venv/bin/activate
        pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install black flake8 pytest httpx

  # Step 2: Lint with Black
  - name: 'python:3.11-slim'
    id: 'Lint with Black'
    dir: 'backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        . /workspace/venv/bin/activate
        black . --check

  # Step 3: Lint with Flake8
  - name: 'python:3.11-slim'
    id: 'Lint with Flake8'
    dir: 'backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        . /workspace/venv/bin/activate
        flake8 .

  # Step 4: Run Unit & Integration Tests with Pytest
  - name: 'python:3.11-slim'
    id: 'Run Tests'
    dir: 'backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        . /workspace/venv/bin/activate
        export PYTHONPATH=.
        pytest

  # Step 5: Build the Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker Image'
    dir: 'backend'
    args:
      - 'build'
      - '-t'
      - '${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REPO}/flux-api:$SHORT_SHA'
      - '.'

  # Step 6: Push the Docker Image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker Image'
    args:
      - 'push'
      - '${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REPO}/flux-api:$SHORT_SHA'

  # Step 7: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'flux-api'
      - '--image=${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REPO}/flux-api:$SHORT_SHA'
      - '--region=${_GCP_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--project=${_GCP_PROJECT}'
      - '--set-secrets=GEMINI_API_KEY=${_GEMINI_API_KEY_SECRET_NAME}:latest'
      - '--add-cloudsql-instances=${_CLOUD_SQL_INSTANCE_NAME}'
      # Set environment variables for the database connection
      - '--set-env-vars=INSTANCE_CONNECTION_NAME=${_CLOUD_SQL_INSTANCE_NAME},DB_USER=${_DB_USER},DB_PASS=${_DB_PASS},DB_NAME=${_DB_NAME}'

images:
  - '${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REPO}/flux-api:$SHORT_SHA'

timeout: '1200s'

options:
  logging: CLOUD_LOGGING_ONLY
