# This is the Cloud Build configuration file for our CI (Continuous Integration) pipeline.
# It defines the steps to lint, test, build, and push our Docker image.

steps:
  # Step 1: Install Python dependencies
  # We specify `dir: 'backend'` to run this command inside the backend subdirectory.
  - name: 'python:3.11-slim'
    id: 'Install Dependencies'
    dir: 'backend' # <--- ADDED: Change working directory
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        python -m venv /workspace/venv
        . /workspace/venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

  # Step 2: Lint with Black
  # All subsequent steps also need to run inside the 'backend' directory.
  - name: 'python:3.11-slim'
    id: 'Lint with Black'
    dir: 'backend' # <--- ADDED
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        . /workspace/venv/bin/activate
        black . --check

  # Step 3: Lint with Flake8
  - name: 'python:3.11-slim'
    id: 'Lint with Flake8'
    dir: 'backend' # <--- ADDED
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        . /workspace/venv/bin/activate
        flake8 .

  # Step 4: Run Unit & Integration Tests with Pytest
  - name: 'python:3.11-slim'
    id: 'Run Tests'
    dir: 'backend' # <--- ADDED
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        . /workspace/venv/bin/activate
        pytest

  # Step 5: Build the Docker Image
  # This step also runs in the 'backend' directory where the Dockerfile is located.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker Image'
    dir: 'backend' # <--- ADDED
    args:
      - 'build'
      - '-t'
      - '${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REPO}/flux-api:$SHORT_SHA'
      - '.'

  # Step 6: Push the Docker Image to Artifact Registry
  # Note: This step does NOT need the dir, as it just pushes an image that's already been built.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker Image'
    args:
      - 'push'
      - '${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REPO}/flux-api:$SHORT_SHA'

# This specifies the final image that was built and pushed.
# This can be used by other parts of the GCP ecosystem.
images:
  - '${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REPO}/flux-api:$SHORT_SHA'

# Increase the default timeout to 15 minutes to allow for dependency installation and tests.
timeout: '900s'

# Define build-wide options.
options:
  # Set the logging mode to only use Cloud Logging. This resolves the trigger error
  # when a specific service account is used.
  logging: CLOUD_LOGGING_ONLY
